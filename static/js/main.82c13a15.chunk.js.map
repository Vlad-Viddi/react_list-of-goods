{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","GoodsList","state","listIsHidden","goods","props","selectedLength","selectOptions","Array","fill","map","item","index","changeListVisibility","setState","showListReversed","prevValue","reverse","sortByAlpha","sort","resetList","sortByLength","a","b","length","changeSelectedLength","event","target","value","resetSelectedLength","this","hidden","type","onClick","filter","good","key","className","onChange","option","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"oOAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAYIC,E,4MACJC,MAAQ,CACNC,cAAc,EACdC,MAAO,EAAKC,MAAMD,MAClBE,eAAgB,G,EAGlBC,cAAgBC,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAMC,GAAP,OAAiBA,EAAQ,K,EAE/DC,qBAAuB,WACrB,EAAKC,SAAS,CACZX,cAAc,K,EAIlBY,iBAAmB,WACjB,EAAKD,UAAS,SAAAE,GAAS,MAAK,CAC1BZ,MAAO,YAAIY,EAAUZ,OAAOa,e,EAIhCC,YAAc,WACZ,EAAKJ,UAAS,SAAAE,GAAS,MAAK,CAC1BZ,MAAO,YAAIY,EAAUZ,OAAOe,Y,EAIhCC,UAAY,WACV,EAAKN,SAAS,CACZV,MAAO,EAAKC,MAAMD,S,EAItBiB,aAAe,WACb,EAAKP,UAAS,SAAAE,GAAS,MAAK,CAC1BZ,MAAO,YAAIY,EAAUZ,OAAOe,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,e,EAI5DC,qBAAuB,SAACC,GACtB,EAAKZ,SAAS,CACZR,eAAgBoB,EAAMC,OAAOC,S,EAIjCC,oBAAsB,WACpB,EAAKf,SAAS,CACZR,eAAgB,K,uDAIV,IAAD,EACyCwB,KAAK5B,MAA7CE,EADD,EACCA,MAAOD,EADR,EACQA,aAAcG,EADtB,EACsBA,eAE7B,OACE,6BACE,4BACEyB,QAAS5B,EACT6B,KAAK,SACLC,QAASH,KAAKjB,sBAHhB,SAQA,yBAAKkB,OAAQ5B,GACX,4BACGC,EAAM8B,QAAO,SAAAvB,GAAI,OAAIA,EAAKa,QAAUlB,KAAgBI,KAAI,SAAAyB,GAAI,OAC3D,wBAAIC,IAAKD,GAAOA,OAGpB,yBAAKE,UAAU,gBAEb,4BACEL,KAAK,SACLC,QAASH,KAAKf,kBAFhB,WAOA,4BACEiB,KAAK,SACLC,QAASH,KAAKZ,aAFhB,uBAOA,4BACEc,KAAK,SACLC,QAASH,KAAKV,WAFhB,SAOA,4BACEY,KAAK,SACLC,QAASH,KAAKT,cAFhB,kBAOA,4BAAQiB,SAAUR,KAAKL,sBACpBK,KAAKvB,cAAcG,KAAI,SAAA6B,GAAM,OAC5B,4BAAQH,IAAKG,GAASA,OAI1B,4BACEP,KAAK,SACLC,QAASH,KAAKD,qBAFhB,gC,GA1GYW,IAAMC,WA2HfC,EApIH,kBACV,yBAAKL,UAAU,OACb,qCACA,kBAAC,EAAD,CAAWjC,MAAOJ,MChBtB2C,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.82c13a15.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Goods</h1>\n    <GoodsList goods={goodsFromServer} />\n  </div>\n);\n\n// @@@@  ########################   @@@@\n\nclass GoodsList extends React.Component {\n  state = {\n    listIsHidden: true,\n    goods: this.props.goods,\n    selectedLength: 1,\n  }\n\n  selectOptions = Array(10).fill(1).map((item, index) => index + 1);\n\n  changeListVisibility = () => {\n    this.setState({\n      listIsHidden: false,\n    });\n  }\n\n  showListReversed = () => {\n    this.setState(prevValue => ({\n      goods: [...prevValue.goods].reverse(),\n    }));\n  }\n\n  sortByAlpha = () => {\n    this.setState(prevValue => ({\n      goods: [...prevValue.goods].sort(),\n    }));\n  }\n\n  resetList = () => {\n    this.setState({\n      goods: this.props.goods,\n    });\n  }\n\n  sortByLength = () => {\n    this.setState(prevValue => ({\n      goods: [...prevValue.goods].sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  changeSelectedLength = (event) => {\n    this.setState({\n      selectedLength: event.target.value,\n    });\n  }\n\n  resetSelectedLength = () => {\n    this.setState({\n      selectedLength: 1,\n    });\n  }\n\n  render() {\n    const { goods, listIsHidden, selectedLength } = this.state;\n\n    return (\n      <div>\n        <button\n          hidden={!listIsHidden}\n          type=\"button\"\n          onClick={this.changeListVisibility}\n        >\n          Start\n        </button>\n\n        <div hidden={listIsHidden}>\n          <ul>\n            {goods.filter(item => item.length >= selectedLength).map(good => (\n              <li key={good}>{good}</li>\n            ))}\n          </ul>\n          <div className=\"btns-section\">\n\n            <button\n              type=\"button\"\n              onClick={this.showListReversed}\n            >\n              REVERSE\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByAlpha}\n            >\n              SORT ALPHABETICALLY\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.resetList}\n            >\n              RESET\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              SORT by LENGTH\n            </button>\n\n            <select onChange={this.changeSelectedLength}>\n              {this.selectOptions.map(option => (\n                <option key={option}>{option}</option>\n              ))}\n            </select>\n\n            <button\n              type=\"button\"\n              onClick={this.resetSelectedLength}\n            >\n              RESET SELECTED LENGTH\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}